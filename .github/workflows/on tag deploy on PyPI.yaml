name: On Tag Deploy on PyPI
env:
  PYPI_URL: https://pypi.org/project/KFSsleep/
  PYTHON_VERSION: ^3.12.0
  RUN_TESTS: false
on:
  push: 
    tags:
      # - "[0-9]+.[0-9]+.[0-9]+"
      - "*" # execute every time tag is pushed

jobs:
  test:
    name: Run Tests
    env:
      working-directory: ${{github.workspace}}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # makes repository structure available

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
      
      - name: Update Pip
        run: pip install --upgrade pip
      
      - name: Install Poetry
        run: |
          pip install poetry 
          poetry config virtualenvs.in-project true
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry install
      
      - name: Check Project Version and Tag Match
        run: |
          project_version=$(poetry version --no-ansi | awk '{print $NF}')
          tag=${GITHUB_REF#refs/tags/*}
          if [ "$project_version" == "$tag" ]; then
            exit 0
          else
            exit 1
          fi
      
      - name: Run Tests
        if: ${{env.RUN_TESTS=='true'}}
        run: poetry run pytest


  build:
    name: Build Distributables
    env:
      working-directory: ${{github.workspace}}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4 # makes repository structure available

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}
    
    - name: Update Pip
      run: pip install --upgrade pip
    
    - name: Install Poetry
      run: |
        pip install poetry
        poetry config virtualenvs.in-project true
        poetry config repositories.test-pypi https://test.pypi.org/legacy/
        poetry install
    
    - name: Build Distributables
      run: poetry build

    - name: Cache ./dist/
      uses: actions/cache/save@v3
      with:
        key: dist
        path: ./dist/
    

  deploy:
    name: Deploy Distributables on PyPI
    env:
      working-directory: ${{github.workspace}}
    environment:
        name: pypi
        url: ${{env.PYPI_URL}}
    needs: [build, test]
    permissions:
      id-token: write
    runs-on: ubuntu-latest

    steps:
    - name: Load ./dist/
      uses: actions/cache/restore@v3
      with:
        key: dist
        path: ./dist/

    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
      # with:
      #   repository-url: https://test.pypi.org/legacy/
